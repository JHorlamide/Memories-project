{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionsType';\nconst initialState = [];\n\nconst postsReducer = (posts = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case \"UPDATE_POST\":\n    case \"LIKE\":\n      return posts.map(post => {\n        return post._id === action.payload._id ? action.payload : post;\n      });\n\n    case \"DELETE\":\n      return posts.filter(post => {\n        return post.id !== action.payload;\n      });\n\n    default:\n      return posts;\n  }\n};\n\nexport default postsReducer;","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Documents/BackEnd-Tuto/JSMastery - Tuto/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","initialState","postsReducer","posts","action","type","payload","map","post","_id","filter","id"],"mappings":"AAAA,SAAYA,SAAZ,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,MAAxC,QAAsD,0BAAtD;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACE,aAAOO,MAAM,CAACE,OAAd;;AAEF,SAAKR,MAAL;AACE,aAAO,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AAEF,SAAK,aAAL;AACA,SAAK,MAAL;AACE,aAAOH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;AACzB,eAAOA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAA1D;AACD,OAFM,CAAP;;AAIF,SAAK,QAAL;AACE,aAAOL,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAU;AAC5B,eAAOA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACE,OAA1B;AACD,OAFM,CAAP;;AAIF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,YAAf","sourcesContent":["import {    FETCH_ALL,  CREATE, UPDATE, DELETE } from '../constants/actionsType';\r\n\r\nconst initialState = [];\r\n\r\nconst postsReducer = (posts = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n\r\n    case \"UPDATE_POST\":\r\n    case \"LIKE\":\r\n      return posts.map((post) => {\r\n        return post._id === action.payload._id ? action.payload : post;\r\n      });\r\n\r\n    case \"DELETE\":\r\n      return posts.filter((post) => {\r\n        return post.id !== action.payload;\r\n      });\r\n\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n\r\nexport default postsReducer;\r\n"]},"metadata":{},"sourceType":"module"}